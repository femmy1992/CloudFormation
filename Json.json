*Skeleton*

{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "this template create a vpc and two subnets",
    "Metadata": {

    },
    "Parameters": {
        

    },
    "Mappings": {
        

    },
    "Conditions": {

    },
    "Resources": {
        
        "CfnVpc": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": "10.0.0.0/16",
            "Tags": [{ "Key": "Name", "Value":  "DevOps" }]
          }
        },
        
        "PubSub": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": "us-east-1a",
            "VpcId": { "Ref": "CfnVpc" },
            "CidrBlock": "10.0.20.0/24",
            "Tags": [{ "Key": "Name", "Value":  "PubSub" }]
          }
        },
        "PvtSub": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "AvailabilityZone": "us-east-1a",
              "VpcId": { "Ref": "CfnVpc" },
              "CidrBlock": "10.0.10.0/24",
              "Tags": [{ "Key": "Name", "Value":  "PvtSub" }]
            }
          }
        
        
        

    },
    "Outputs": {
        
    }
  }

*Template*

{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloudformation template to create EC2 instance",
    "Parameters": {
      "Environment": {
        "Description": "Application environment",
        "Type": "String",
        "Default": "development",
        "AllowedValues": [
          "development",
          "testing",
          "acceptance",
          "production"
        ]
      },
      "VolumeSize": {
        "Description": "EBS Volume size",
        "Type": "Number",
        "Default": 8,
        "MinValue": 8,
        "MaxValue": 100,
        "ConstraintDescription": "must be a number between 8 to 100 Gb"
      },
      "KeyName": {
        "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
      },
      "SecurityGroupPorts": {
        "Description": "Simple Description of a Number Parameter, with MinValue and MaxValue",
        "Type": "Number",
        "AllowedValues": [
          80,
          443,
          22
        ]
      },
      "SSHLocation": {
        "Description": "The IP address range that can be used to SSH to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      }
    },
    "Mappings": {
      "RegionMap": {
        "us-east-1": {
          "HVM64": "ami-0ff8a91507f77f867",
          "HVMG2": "ami-0a584ac55a7631c0c"
        },
        "us-west-1": {
          "HVM64": "ami-0bdb828fd58c52235",
          "HVMG2": "ami-066ee5fd4a9ef77f1"
        },
        "eu-west-1": {
          "HVM64": "ami-047bb4163c506cd98",
          "HVMG2": "ami-0a7c483d527806435"
        },
        "ap-northeast-1": {
          "HVM64": "ami-06cd52961ce9f0d85",
          "HVMG2": "ami-053cdd503598e4a9d"
        },
        "ap-southeast-1": {
          "HVM64": "ami-08569b978cc4dfa10",
          "HVMG2": "ami-0be9df32ae9f92309"
        }
      },
      "EC2TypeBasedOnEnv": {
        "development": {
          "instanceType": "t2.nano",
          "keyName": "dev-key"
        },
        "testing": {
          "instanceType": "t2.micro",
          "keyName": "tst-key"
        },
        "acceptance": {
          "instanceType": "t2.small",
          "keyName": "acc-key"
        },
        "production": {
          "instanceType": "t2.medium",
          "keyName": "prod-key"
        }
      }
    },
    "Resources": {
      "EC2Instance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": [
            "RegionMap",
            "AWS::Region",
            "HVM64"
          ],
          "InstanceType": [
            "EC2TypeBasedOnEnv",
            "Environment",
            "instanceType"
          ],
          "SecurityGroups": [
            {
              "Ref": "InstanceSecurityGroup"
            }
          ],
          "KeyName": {
            "Ref": [
              "EC2TypeBasedOnEnv",
              "Environment",
              "keyName"
            ]
          },
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/xvda",
              "Ebs": {
                "VolumeType": "gp2",
                "DeleteOnTermination": true,
                "VolumeSize": "VolumeSize"
              }
            }
          ]
        }
      },
      "InstanceElasticIP": {
        "Type": "AWS::EC2::EIP",
        "Properties": {
          "InstanceId": "EC2Instance"
        }
      },
      "InstanceSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable SSH access via port 22",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "SecurityGroupPorts",
              "ToPort": "SecurityGroupPorts",
              "CidrIp": {
                "Ref": "SSHLocation"
              }
            }
          ]
        }
      },
      "S3Bucket": {
        "Type": "AWS::S3::Bucket"
      }
    },
    "Outputs": {
      "InstanceDetails": {
        "Description": "EC2 Instance details",
        "Value": {
          "Ref": "EC2Instance"
        }
      },
      "AZ": {
        "Description": "Availability Zone of the newly created EC2 instance",
        "Value": [
          "EC2Instance",
          "AvailabilityZone"
        ]
      },
      "PublicDNS": {
        "Description": "Public DNSName of the newly created EC2 instance",
        "Value": [
          "EC2Instance",
          "PublicDnsName"
        ]
      },
      "PublicIP": {
        "Description": "Public IP address of the newly created EC2 instance",
        "Value": [
          "EC2Instance",
          "PublicIp"
        ]
      },
      "SecurityGroupId": {
        "Description": "Public IP address of the newly created EC2 instance",
        "Value": [
          "InstanceSecurityGroup",
          "GroupId"
        ]
      }
    }
  }
